# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/node:10.14

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/mongo:3.4.4

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: yarn install

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

  # push to Google Container Registry (GCR)
  push-dev-server:
    docker:
      - image: tenshi/circleci-agent
      #turbinelabs/gcloud-build:0.19.0
      #
#      - google/cloud-sdk
      #
      #-
      #
    environment:
      DEBIAN_FRONTEND: noninteractive
    steps:
      - checkout
      - setup_remote_docker
#      - run: openrc boot
      - run: echo $GCLOUD_SERVICE_KEY > ${HOME}/gcloud-service-key.json
      - run: gcloud auth activate-service-account --key-file=${HOME}/gcloud-service-key.json
      - run: gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
      - run: gcloud --quiet config set compute/zone ${GOOGLE_COMPUTE_ZONE}
      - run: gcloud --quiet container clusters get-credentials ${GOOGLE_CLUSTER_NAME}
      - run: gcloud container clusters get-credentials ${GOOGLE_CLUSTER_NAME} --zone ${GOOGLE_COMPUTE_ZONE} --project ${GOOGLE_PROJECT_ID}
      - run: gcloud components update
      - run: docker build -t containerdemo -f ./Dockerfile .
      - run: docker tag containerdemo gcr.io/${GOOGLE_PROJECT_ID}/containerdemo:$CIRCLE_SHA1
      - run: gcloud docker -- push gcr.io/${GOOGLE_PROJECT_ID}/containerdemo:$CIRCLE_SHA1
      - run: ./kube/generate_signature.sh
#      - run: kubectl delete deployment --all
#      - run: kubectl delete event --all
#      - run: ./kube/replace-image.sh
#      - run: kubectl create -f ./kube/web-deployment.yml
#      - run: kubectl get event
#      - run: kubectl rollout status deployment/containerdemo
#      - run: kubectl delete deployment containerdemo


workflows:
  version: 2
  build:
    jobs:
      - build:
          filters:
            branches:
              only:
                - master
  dev_deploy:
    jobs:
      - build:
          filters:
            branches:
              only: master
      - push-dev-server:
          filters:
            branches:
              only: master
